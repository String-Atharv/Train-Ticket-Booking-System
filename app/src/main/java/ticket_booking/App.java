/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ticket_booking;

import ticket_booking.entities.Train;
import ticket_booking.entities.User;
import ticket_booking.services.UserBookingService;

import java.io.IOException;
import java.util.List;
import java.util.Scanner;


public class App {


    public static void main(String[] args) throws IOException {
        System.out.println("App is started...");
        Scanner sc=new Scanner(System.in);
        int option=0;
        UserBookingService ubs;
        User currentUser=null;
        try{
            ubs=new UserBookingService();
        }
        catch(IOException e){
            System.out.println("something went wrong...");
            e.printStackTrace();
            return;
        }
        Train trainSelectedForBooking=null;
        while(option!=7){
            System.out.println("Choose option");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Ticket and seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");
            option= sc.nextInt();

            switch(option){
                case 1:
                    System.out.println("Enter your name");
                    String nameToSignUp=sc.next();
                    System.out.println("Enter your password");
                    String pass=sc.next();
                    User userToSignUp=new User(nameToSignUp,pass);
                    ubs.signUp(userToSignUp);
                    currentUser=userToSignUp;
                    break;
                case 2:
                    System.out.println("Enter your name");
                    String nameToLogin=sc.next();
                    System.out.println("Enter your password");
                    String passToLogin=sc.next();
                    currentUser=ubs.login(nameToLogin,passToLogin);
                    if(currentUser==null) System.out.println("Login failed..");
                    else System.out.println("logged in successfully..");
                    break;
                case 3:
                    if(currentUser==null){
                        System.out.println("please login first to fetch the booking");
                        break;
                    }
                    System.out.println("Fetching your booking...");
                    ubs.fetchBooking(currentUser);
                    break;
                case 4:

                    try {
                        System.out.println("Searching Trains...");
                        System.out.println("Enter Source Station");
                        String src = sc.next();
                        System.out.println("Enter Destination Station");
                        String des = sc.next();

                        List<Train> trainss = ubs.getTrains(src, des);

                        if (trainss.isEmpty()) {
                            System.out.println("No trains found between " + src + " and " + des);
                            break;
                        }

                        System.out.println("Select the train by typing 1,2,3...");
                        int index = 1;
                        for (Train t : trainss) {
                            System.out.println(index + ") Train ID :" + t.getTrainId());
                            for (String s : t.getStationTimes().keySet()) {
                                System.out.println(s + ": " + t.getStationTimes().get(s));
                            }
                            index++;
                        }
                        int n=sc.nextInt();
                        System.out.println("train of trainId:"+trainss.get(n-1).getTrainId()+" is selected");
                        trainSelectedForBooking=trainss.get(n-1);
                    } catch (Exception e) {
                        System.out.println("Error while searching trains: " + e.getMessage());
                        e.printStackTrace(); // This shows exact line of failure
                    }
                    break;

                case 5:
                    try {
                        if (currentUser == null) {
                            System.out.println("Please login first to book a seat.");
                            break;
                        }
                        if (trainSelectedForBooking == null) {
                            System.out.println("Please search and select a train first.");
                            break;
                        }
                        System.out.println("Enter Source Station:");
                        String bookingSource = sc.next();
                        System.out.println("Enter Destination Station:");
                        String bookingDestination = sc.next();
                        List<List<Integer>> seats = ubs.fetchSeats(trainSelectedForBooking);
                        System.out.println("Select the seat by typing row and column out of these seats");
                        for (List<Integer> s : seats) {
                            for (int val : s) {
                                System.out.print(val + " ");
                            }
                            System.out.println();
                        }
                        System.out.println("Enter the row number");
                        int r = sc.nextInt();
                        System.out.println("Enter the column number");
                        int c = sc.nextInt();
                        System.out.println("Booking your seat ....");
                        boolean ans = ubs.bookSeat(currentUser, trainSelectedForBooking, r, c,bookingSource,
                                bookingDestination);
                        if (ans) System.out.println("seat booked...");
                        else System.out.println("can't book this seat..");
                    }
                    catch(Exception e){
                        System.out.println("Error while booking seat: " + e.getMessage());
                        sc.nextLine();
                    }
                    break;
                case 6:
                    try {
                        System.out.println("Enter the ticket number to cancel the booking");
                        String ticketId = sc.next();
                        boolean b = ubs.cancelBooking(currentUser, ticketId);
                        if (b) System.out.println("Ticket of" + ticketId + "is removed successfully");
                        else System.out.println("Ticket of" + ticketId + "not found");
                    }
                    catch (Exception e){
                        System.out.println("Error while cancelling booking: " + e.getMessage());
                    }
                    break;
                case 7:
                    System.out.println("Exiting app....");
                    break;
                default:
                    System.out.println("Invalid option. Please choose between 1-7.");
            }
        }

    }
}
